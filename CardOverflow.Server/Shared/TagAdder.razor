@using Microsoft.FSharp.Core
@using CardOverflow.Entity
@using CardOverflow.Debug
@using CardOverflow.Pure
@using CardOverflow.Api
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Identity
@using CardOverflow.Server.Data
@inject IToastService ToastService
@inject DbExecutor DbExecutor

  <AuthorizeView Context="_">
    <EditForm Model=@_writeTag OnValidSubmit=@_SaveTag>
      <div class="form-group btn-group">
        <InputText @bind-Value=@_writeTag.Text class="form-control" placeholder="New Tag Name" /> @*this seems to break validation: @bind-Value:event="oninput"*@
        <button type="submit" class="btn btn-primary">Add</button>
        <DataAnnotationsValidator />
        <ValidationSummary />
      </div>
    </EditForm>
  </AuthorizeView>

  @code {
    [Parameter] public EventCallback<TagText> AddTag { get; set; }
    private TagText _writeTag = new TagText();

    private async Task _SaveTag() {
      await AddTag.InvokeAsync(_writeTag);
      _writeTag.Text = "";
    }

  } 