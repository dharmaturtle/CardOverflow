@page "/concept/create"
@attribute [Authorize]
@using Microsoft.FSharp.Core
@using CardOverflow.Entity
@using CardOverflow.Debug
@using CardOverflow.Pure
@using CardOverflow.Api
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Identity
@using CardOverflow.Sanitation
@using Syncfusion.EJ2.Blazor
@using Syncfusion.EJ2.Blazor.RichTextEditor
@inject IToastService ToastService
@inject DbExecutor DbExecutor
@inject Dexie Dexie
@inject UserProvider UserProvider

@if (_command == null || _templates == null) {
  <p><em>@LoadingMessage</em></p>
} else {
  <EditConceptDetail EditConcept=@_command Templates=@_templates NewEditConceptOnSave=true />
}

@code {
  private Domain.Summary.User _user;
  string LoadingMessage = "Loading...";
  private ViewEditConceptCommand _command;
  private List<Domain.Summary.Template> _templates;

  protected override async Task OnParametersSetAsync() {
    await base.OnParametersSetAsync();
    _user = await UserProvider.ForceSummary();
    var template = await Dexie.GetTemplate(_user.CollectedTemplates.First().Item1);
    _command = ViewEditConceptCommand.create(Domain.Projection.toCurrentTemplateInstance(template));
    _templates = await _user.CollectedTemplates.Select(x => x.Item1).Pipe(Dexie.GetTemplate);
    StateHasChanged();
  }

}
