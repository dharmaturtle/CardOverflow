@using Microsoft.FSharp.Core
@using CardOverflow.Entity
@using CardOverflow.Debug
@using Microsoft.FSharp.Collections
@using CardOverflow.Pure
@using CardOverflow.Api
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Identity
@using Syncfusion.EJ2.Blazor
@using Syncfusion.EJ2.Blazor.RichTextEditor
@inject IToastService ToastService
@inject DbExecutor DbExecutor

<label><b>@Field.EditField.Name: </b></label>
<EjsRichTextEditor @bind-Value=@Field.Value SaveInterval="10" Enabled=@(!IsDisabled)>
  <RichTextEditorIFrameSettings Enable="true" />
  <RichTextEditorToolbarSettings Items=@_tools />
  <RichTextEditorEvents ValueChange=@valueChanged />
</EjsRichTextEditor>
<ValidationMessage For=@(() => Field.Value) />

@code {
  [Parameter] public EditFieldAndValue Field { get; set; }
  [Parameter] public bool IsDisabled { get; set; }
  [Parameter] public EventCallback<string> ValueUpdated { get; set; }
  private object[] _tools = new object[] { "Bold", "Italic", "Underline", "SubScript", "SuperScript", "StrikeThrough", "FontName", "FontSize", "FontColor", "BackgroundColor", "|", "Formats", "Alignments", "OrderedList", "UnorderedList", "Outdent", "Indent", "|", "CreateTable", "CreateLink", "Image", "|", "ClearFormat", "SourceCode", "FullScreen", "|", "Undo", "Redo" };
  private SearchCommand _searchCommand = new SearchCommand("", SearchOrder.Popularity);

  private Task valueChanged(Syncfusion.EJ2.Blazor.RichTextEditor.ChangeEventArgs args) =>
    ValueUpdated.InvokeAsync(args.Value);

}
