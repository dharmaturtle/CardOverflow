@using Microsoft.FSharp.Core
@using CardOverflow.Entity
@using CardOverflow.Debug
@using CardOverflow.Pure
@using CardOverflow.Server.Pages.Concept
@using CardOverflow.Api
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Identity
@using ThoughtDesign.WebLibrary
@using Microsoft.FSharp.Collections
@inject DbExecutor DbExecutor
@inject NavigationManager NavigationManager
@inject IToastService ToastService

<div class="row">
  <div class="col-auto mt-2">
    Move
    <a href="my/concept?revision=@Mine.RevisionId&index=@Mine.Index" class="mx-1">
      <HoverPreview Padding="0">
        <ResizingIframe Revision=@((Mine.RevisionId, Mine.Index)) Back />
      </HoverPreview>
      @Mine.RevisionId with index @Mine.Index
    </a>
    to another deck
  </div>
  <div class="col">
    <DeckSelector SelectedIds=@(new List<Guid> { Mine.DeckId })
                  DecksSelected=@(async newDeckIds => {
                                    // highTODO fix
                                    //if (await StackAppender.ChangeDecks(newDeckIds, Card.Pointer, StackId)) {
                                    //  ToastService.ShowInfo("Saved!");
                                    //  await Remove.InvokeAsync(null);
                                    //}
                                  }) />
  </div>
</div>

@code {
  [Parameter] public ConceptRevisionIndex Mine { get; set; }
  [Parameter] public EventCallback Remove { get; set; }

}
