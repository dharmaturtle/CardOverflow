@page "/example/{Id:guid}/revision"
@using Microsoft.FSharp.Core
@using CardOverflow.Entity
@using CardOverflow.Debug
@using CardOverflow.Pure
@using CardOverflow.Api
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Identity
@inject DbExecutor DbExecutor
@inject IToastService ToastService
@inject KeyValueStore KeyValueStore

@if (_example == null) {
  <p><em>Loading...</em></p>
} else {
  <div class="d-flex justify-content-between">
    @if (FSharpOption.IsSome(_example.ParentId)) {
      <a href="concept/@_example.ParentId.Value">
        Parent Concept
      </a>
    }
    <h3>
      <span>@_example.CurrentRevision.Title</span>
    </h3>
    <div>
      By <a href="user/@_example.AuthorId">@_example.Author</a>
    </div>
  </div>
  <ol class="list-group" style="list-style: decimal inside;">
    @foreach (var revision in _example.Revisions) {
      <li class="list-group-item" style="display: list-item">
        @revision.Meta.ServerReceivedAt.Value
        <ResizingIframeExample ExampleRevisionId=@Tuple.Create(Id, revision.Ordinal) Back />
      </li>
    }
  </ol>
}

@code {
  [Parameter] public Guid Id { get; set; }
  private Domain.Projection.Kvs.Example _example;

  public override async Task SetParametersAsync(ParameterView parameters) {
    await base.SetParametersAsync(parameters);
    _example = await KeyValueStore.GetExample_(Id).ToTask();
  }

}
