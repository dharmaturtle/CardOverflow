@using Microsoft.FSharp.Core
@using CardOverflow.Pure
@using System.Linq
@using CardOverflow.Entity
@using CardOverflow.Legacy
@using CardOverflow.Debug
@using CardOverflow.Api
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Identity
@using CardOverflow.Sanitation
@using CardOverflow.Server.Data
@inject DbExecutor DbExecutor
@inject IToastService ToastService
@inject NavigationManager NavigationManager
@inject TimeProvider TimeProvider
@inject UserProvider UserProvider
@inject Dexie Dexie

@if (_example == null) {
  <p><em>@_loadingMessage</em></p>
} else {
  <div class="col-4">
    @*<Concept_Examples Concept=@_concept
                      Examples=@_concept.Examples
                      RevisionSelected=@(x => _selected = x)
                      CollectedIds=@_concept.CollectedIds
                      UpdateCollectedIds=@(async ids => {
                                             _concept.CollectedIds = ids;
                                             await DbExecutor.QueryAsync(db => ConceptRepository.GetCollected(db, Guid.Empty, _concept.Id)).Match(ToastService, ccs => _cards = ccs);
                                           })
                      Selected=@_selected />*@
  </div>
  <div class="col">
    <div class="row">
      <div class="col-xl">
        <Concept_IFrameHeader Example=@_example />
        @foreach (var card in _stack.Cards) {
          <div class="row @(card.Pointer.ToString() == "medTODO eventually make this page take a query string" ? "border border-warning mb-3 pb-2 mt-2 pt-3 rounded" : "")" style="border-width: medium!important;">
            @if (card != default) {
              <div class="col-4 @(card.State.IsSuspended ? "text-white bg-secondary" : "")">
                <Concept_Collect StackId=_stack.Id Card=@card CardStateUpdated=@(x => _CardStateUpdated(x.Item1, x.Item2)) />
              </div>
            }
            <div class="col">
              <ResizingIframe Srcdoc="@_example.FrontBackFrontSynthBackSynth(card.Pointer).Item2" />
            </div>
          </div>
        }
      </div>
    </div>
    <div class="row">
      <div class="col-xl">
        @*<Concept_Tag Concept=@_concept />*@
      </div>
      <div class="col-xl">
        @*<Concept_Comments Concept=@_concept />*@
      </div>
    </div>
  </div>
}

@code {
  [Parameter] public Guid StackId { get; set; }
  private Domain.Summary.Stack _stack;
  private Domain.Projection.ExampleInstance _example;
  private string _loadingMessage = "Loading...";

  public override async Task SetParametersAsync(ParameterView parameters) {
    await base.SetParametersAsync(parameters);
    _stack = await Dexie.GetStack(StackId);
    _example = await Dexie.GetExampleInstance(_stack.ExampleRevisionId);
  }

  private void _CardStateUpdated(Domain.Infrastructure.CardTemplatePointer pointer, CardState newState) {
    _stack.Cards.Single(x => x.Pointer == pointer).State = newState;
  }

}
