@using System.Linq
@using Microsoft.FSharp.Core
@using Microsoft.FSharp.Collections
@using CardOverflow.Entity
@using CardOverflow.Debug
@using CardOverflow.Pure
@using CardOverflow.Api
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Identity
@using CardOverflow.Sanitation
@using CardOverflow.Server.Data
@inject DbExecutor DbExecutor
@inject IToastService ToastService
@inject UserContentHttpClient UserContentHttpClient
@inject TimeProvider TimeProvider
@inject UserProvider UserProvider
@inject Dexie Dexie

<tr>
  <th scope="row" style="text-align: center">
    <CollectToggles IsExample=true
                    ExampleUsers=@Example.Collectors />
  </th>
  <td>
    <div class="list-group-item list-group-item-action border-0">
      <span class="font-weight-bolder">
        @if (Example.Title == null) {
          <span>&laquo; Default &raquo;</span>
        } else {
          @Example.Title
        }
      </span>
      <span class="font-italic float-right">
        by <a href="@($"/user/{Example.AuthorId}")" style="color:unset">@Example.Author</a>
      </span>
    </div>
  </td>
  <td>
    <BSDropdown Class="align-self-center">
      <BSDropdownToggle Class="bg-transparent"></BSDropdownToggle>
      <BSDropdownMenu>
        @if (Example.AuthorId == _userId) {
          <BSDropdownItem Href="@($"concept/editexample/{Example.Id}")"><span class="oi oi-pencil"></span> Edit</BSDropdownItem>
        }
        <BSDropdownItem Href="@($"concept/copyrevision/{Example.UrlId}")"><span class="fas fa-copy"></span> Copy to a new Concept</BSDropdownItem>
        <BSDropdownItem Href="@($"example/{Example.Id}/revision")" target="_blank"><i class="fas fa-history"></i> Revisions (in new window)</BSDropdownItem>
        @if (Example.Title != null) {
          <BSDropdownItem Href="@($"conceptdiff/{Example.UrlId}")">&Delta; Compare with &laquo; Default &raquo;</BSDropdownItem>
        }
        @if (_collectedOrdinal != null && Example.CurrentOrdinal != _collectedOrdinal) {
          <BSDropdownItem Href="@($"conceptdiff/{Example.Id}-{_collectedOrdinal.Value}/Your Collected Example/{Example.UrlId}/Other Example")">&Delta; Compare with your collected Example</BSDropdownItem>
        }
      </BSDropdownMenu>
    </BSDropdown>
  </td>
</tr>
@*@if (_revisions != null && _displayAllRevisions) {
  foreach (var revision in _revisions.SortedMeta.Skip(1)) {
    <tr>
      <th></th>
      <td class="row pr-3">
        <div class="col-auto">
          <CollectToggles CollectedIds=@CollectedIds
                          Ids=@(new ConceptRevisionIds(revision.ConceptId, revision.ExampleId, revision.Id))
                          CardCount=@revision.Indexes.Count()
                          RevisionUsers=@revision.Users
                          UpdateCollectedIds=@UpdateCollectedIds />
        </div>
        <button class="col list-group-item list-group-item-action @(Selected.Id == revision.Id ? "active" : "border-0")" @onclick="@(() => RevisionSelected.InvokeAsync(revision))">
          <Concept_ExampleSummary Revision=@revision />
        </button>
      </td>
      <td>
        <BSDropdown Class="align-self-center">
          <BSDropdownToggle Class="pl-3 bg-transparent"></BSDropdownToggle>
          <BSDropdownMenu>
            <BSDropdownItem Href="@($"concept/copyrevision/{revision.Id}")"><span class="fas fa-copy"></span> Copy to a new Concept</BSDropdownItem>
            @if (Example.Title != null) {
              <BSDropdownItem Href="@($"conceptdiff/{revision.Id}")">&Delta; Compare with &laquo; Default &raquo;</BSDropdownItem>
            }
            <BSDropdownItem Href="@($"conceptdiff/{revision.Id}/Older Example Revision/{Example.Revision.Id}/Latest Example Revision")">&Delta; Compare with latest Example Revision</BSDropdownItem>
            @if (CollectedIds?.Value?.RevisionId != null && revision.Id != CollectedIds.Value.RevisionId) {
              <BSDropdownItem Href="@($"conceptdiff/{CollectedIds.Value.RevisionId}/Your Collected Example/{revision.Id}/Other Example")">&Delta; Compare with your collected Example</BSDropdownItem>
            }
          </BSDropdownMenu>
        </BSDropdown>
      </td>
    </tr>
  }
}*@

@code {
  private Guid? _userId;
  [Parameter] public Domain.Projection.Concept Example { get; set; }
  private bool _collectedExample;
  private int? _collectedOrdinal;

  public override async Task SetParametersAsync(ParameterView parameters) {
    await base.SetParametersAsync(parameters);
    _userId = await UserProvider.GetId();
    var stack = await Dexie.GetStackByExample(Example.Id);
    if (stack.IsSome()) {
      _collectedExample = true;
      _collectedOrdinal = stack.Value.ExampleRevisionId.Item2;
    }
  }

}
