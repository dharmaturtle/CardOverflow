@using Microsoft.FSharp.Core
@using CardOverflow.Entity
@using CardOverflow.Debug
@using CardOverflow.Pure
@using CardOverflow.Api
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Identity
@using CardOverflow.Sanitation
@using CardOverflow.Server.Data
@inject DbExecutor DbExecutor
@inject IToastService ToastService
@inject UserContentHttpClient UserContentHttpClient
@inject TimeProvider TimeProvider
@inject UserProvider UserProvider

<div class="d-flex justify-content-end">
  by&nbsp;<a href="@($"/user/{Example.AuthorId}")" style="color:unset">@Example.AuthorId</a>
  @if (Example.AuthorId == _userId) {
    <a href="concept/editexample/@Example.Id" title="Edit">
      <span class="oi oi-pencil ml-2" />
    </a>
  }
  <a href="concept/copyrevision/@Example.Id" title="Edit a Copy">
    <span class="fas fa-copy ml-2" />
  </a>
  <a href="/example/@Example.Id/revision" title="Revisions">
    <i class="fas fa-history ml-2"></i>
  </a>
  @if (LatestOrdinal.HasValue && LatestOrdinal.Value == Example.Ordinal) {
    <a>
      @*Hack: The empty <a> keeps it in alignment with the other icons*@
      <span class="fas fa-sync text-success ml-2" title="Up to date" />
    </a>
  } else {
    <a href="@($"conceptdiff/{Example.ExampleId}-{Example.Ordinal}/Older Example Revision/{Example.ExampleId}-{LatestOrdinal}/Latest Example Revision")">
      <span class="fas fa-sync text-danger ml-2" title="Out of date" />
    </a>
  }
</div>

@code {
  private Guid? _userId;
  [Parameter] public Domain.Projection.ExampleInstance Example { get; set; }
  [Parameter] public int? LatestOrdinal { get; set; }

  public override async Task SetParametersAsync(ParameterView parameters) {
    await base.SetParametersAsync(parameters);
    _userId = await UserProvider.GetId();
    StateHasChanged();
  }

}
