@using System.Linq
@using Microsoft.FSharp.Core
@using Microsoft.FSharp.Collections
@using CardOverflow.Entity
@using CardOverflow.Debug
@using CardOverflow.Pure
@using CardOverflow.Api
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Identity
@using CardOverflow.Server.Data
@using ThoughtDesign.WebLibrary
@inject DbExecutor DbExecutor
@inject IToastService ToastService
@inject UserContentHttpClient UserContentHttpClient
@inject TimeProvider TimeProvider
@inject Dexie Dexie

<table style="width:100%">
  <thead>
    <tr>
      <th scope="col" style="text-align:center;">
        <CollectToggles IsConcept=true
                        ExampleUsers=@Concept.Collectors />
      </th>
      <th scope="col" style="width:100%; text-align:center;">
        @if (!_isCollected) {
          <h4>Examples</h4>
        } else {
          <div class="btn-group" role="group">
            <a class="btn btn-primary" href="concept?revision=..."> @* highTODO fix href*@
              All Examples
            </a>
            <a class="btn btn-light" href="my/concept?revision=..."> @* highTODO fix href*@
              My Example
            </a>
          </div>
        }
      </th>
      <th scope="col">
        <a class="btn btn-outline-success" href="concept/copyrevision/@Concept.Id" title="Add an Example">
          <i class="fas fa-plus"></i>
        </a>
      </th>
    </tr>
  </thead>
  <tbody>
    @foreach (var example in Concept.Children) {
      <Concept_Example Example=@example />
    }
  </tbody>
</table>

@code {
  [Parameter] public Domain.Projection.Concept Concept { get; set; }
  private bool _isCollected;

  public override async Task SetParametersAsync(ParameterView parameters) {
    await base.SetParametersAsync(parameters);
    var stack = await Dexie.GetStackByExample(Concept.Id);
    _isCollected = stack.IsSome();
  }

}
