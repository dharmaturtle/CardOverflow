@using Microsoft.FSharp.Core
@using CardOverflow.Entity
@using CardOverflow.Debug
@using CardOverflow.Pure
@using CardOverflow.Api
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Identity
@using CardOverflow.Sanitation
@using CardOverflow.Server.Data
@inject DbExecutor DbExecutor
@inject IToastService ToastService
@inject UserContentHttpClient UserContentHttpClient
@inject TimeProvider TimeProvider

<div>
  <h4>Comments</h4>
  <ul class="list-group">
    @foreach (var comment in Concept.Comments) {
      <li class="list-group-item border-0">
        <div>
          @comment.Text
        </div>
        <div class="font-italic float-right">
          by
          <a href="user/@comment.UserId">
            @comment.User
          </a>
          <span class="small text-muted" title=@(comment.Created + " UTC")>
            - @ViewLogic.timestampToPretty(comment.Created, TimeProvider.utcNow)
          </span>
        </div>
      </li>
    }
    <Comment ConceptId=@Concept.Id AddComment=@_AddComment />
  </ul>
</div>

@code {
  [CascadingParameter] Task<Domain.Summary.User> UserTask { get; set; }
  [Parameter] public CardOverflow.Pure.ExploreConcept Concept { get; set; }

  async Task _AddComment(string comment) {
    var user = await UserTask;
    Concept.Comments = Concept.Comments.Append(new Pure.Comment(user.DisplayName, user.Id, comment, TimeProvider.utcNow, false)).ToList();
  }

}
