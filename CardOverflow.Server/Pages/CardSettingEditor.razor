@page "/cardsetting"
@attribute [Authorize]

@using Microsoft.FSharp.Core
@using CardOverflow.Entity
@using CardOverflow.Debug
@using CardOverflow.Pure
@using CardOverflow.Api
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Identity
@using CardOverflow.Sanitation
@using CardOverflow.Server.Data
@inject DbExecutor DbExecutor
@inject IToastService ToastService
@inject UserAppender UserAppender
@inject UserProvider UserProvider

@if (_settings == null || _selected == null) {
  <p><em>Loading...</em></p>
} else {
  <div class="row">
    <div class="col-sm-10">
      <CardSettingEditorDetail Setting=@_selected Save=@Save SetAsDefault=@_SetSelectedAsDefault />
    </div>
    <div class="col-sm-2 list-group">
      <h5>Card Settings</h5>
      <button type="button" class="btn btn-success" @onclick=@_Add>
        Add
      </button>
      <button type="button" class="btn btn-primary" @onclick=@Save>Save</button>
      @foreach (var x in _settings.Select((x, i) => new { Setting = x, Index = i })) {
        <button class="list-group-item list-group-item-action @(_selected.Id == x.Setting.Id ? "active" : "")"
                @onclick=@(() => _Select(x.Index))>
          @if (x.Setting.IsDefault) {
            <span class="oi oi-star"></span>
          }
          @x.Setting.Name
        </button>
      }
    </div>
  </div>
}

@code {
  private Domain.Summary.User _user;
  private List<CardSetting> _settings;
  private ViewCardSetting _selected;

  protected override async Task OnParametersSetAsync() {
    _user = await UserProvider.ForceSummary();
    _settings = _user.CardSettings.ToList();
    _selected = ViewCardSetting.load(_settings.Single(x => x.IsDefault));
  }

  private void _Select(int index) =>
    _selected = ViewCardSetting.load(_settings.ElementAt(index));

  private void _Add() {
    var setting = CardSettingModule.defaultCardSettings(Guid.NewGuid(), "New Card Settings", false);
    _settings.Add(setting);
    _selected = ViewCardSetting.load(setting);
  }

  private void _SetSelectedAsDefault() {
    _settings.Single(x => x.IsDefault).IsDefault = false;
    _selected.IsDefault = true;
  }

  private async Task Save() {
    if (await UserAppender.CardSettingsEdited(_settings)) {
      ToastService.ShowInfo("Saved!");
    }
  }

}
